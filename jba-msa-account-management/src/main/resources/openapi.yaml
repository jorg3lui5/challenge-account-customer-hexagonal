openapi: 3.0.0
info:
  title: Api Account management
  description: |
    Api for account management
  contact:
    name: Jorge Barreto
    email: jorg3lui5@hotmail.com
  license:
    name: Apache 2.0
    url: https://www.gnu.org/licenses/gpl-3.0.html
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1/account-management
tags:
  - name: Account
    description: Account Controller
  - name: Movement
    description: Movement Controller
paths:
  /accounts/{accountId}:
    get:
      tags:
        - Account
      summary: Get account by id
      description: |
        ### Detail:
        Get account by id
         | Expected Result  | Path Parameter | Query Parameter                 |
        | ---------------- | ------------   | -----------------------------------|
        | Retrieve an account by id| accountId | - |
      operationId: GetAccountById
      parameters:
        - name: accountId
          in: path
          description: Account Id
          required: true
          schema:
            type: integer
            format: int64
            example: 1234423
      responses:
        "200":
          description: Account retrieved successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetAccountByIdResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    delete:
      tags:
        - Account
      summary: Delete account by id
      description: |
        ### Detail:
        Delete account by id
         | Expected Result  | Path Parameter | Query Parameter                 |
        | ---------------- | ------------   | -----------------------------------|
        | Delete an account by id| accountId | - |
      operationId: DeleteAccount
      parameters:
        - name: accountId
          in: path
          description: Account Id
          required: true
          schema:
            type: integer
            format: int64
            example: 1234423
      responses:
        "200":
          description: |-
            <b>`Ok`</b><br><br>
            Account deleted Successfully.
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
  /accounts:
    get:
      tags:
        - Account
      summary: Get list of accounts
      description: >+
        ### Details:
        Retrieve the list of all accounts.<br>
      operationId: getAccounts
      responses:
        "200":
          description: Accounts retrieved successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetAccountsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    post:
      tags:
        - Account
      summary: Save an account
      description: Save account data
      operationId: PostAccount
      requestBody:
        description: Account to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostAccountRequest'
      responses:
        "200":
          description: |-
            <b>`Created`</b><br><br>
            Account saved successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    put:
      tags:
        - Account
      summary: Modify all account data
      description: Modify all data of an account
      operationId: PutAccount
      requestBody:
        description: Account to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutAccountRequest'
      responses:
        "200":
          description: |-
            <b>`Ok`</b><br><br>
            Account update successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    patch:
      tags:
        - Account
      summary: Modify one or more account data
      description: Modify one or more data of an account
      operationId: PatchAccount
      requestBody:
        description: Account data to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchAccountRequest'
      responses:
        "200":
          description: Account data modified successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
  /movements/{movementId}:
    get:
      tags:
        - Movement
      summary: Get movement by id
      description: |
        ### Detail:
        Get movement by id
         | Expected Result  | Path Parameter | Query Parameter                 |
        | ---------------- | ------------   | -----------------------------------|
        | Retrieve a movement by id| movementId | - |
      operationId: GetMovementById
      parameters:
        - name: movementId
          in: path
          description: Movement Id
          required: true
          schema:
            type: integer
            format: int64
            example: 1234423
      responses:
        "200":
          description: Movement retrieved successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetMovementByIdResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    delete:
      tags:
        - Movement
      summary: Delete movement by id
      description: |
        ### Detail:
        Delete movement by id
         | Expected Result  | Path Parameter | Query Parameter                 |
        | ---------------- | ------------   | -----------------------------------|
        | Delete a movement by id| - | movementId |
      operationId: DeleteMovement
      parameters:
        - name: movementId
          in: path
          description: Movement Id
          required: true
          schema:
            type: integer
            format: int64
            example: 1234423
      responses:
        "200":
          description: |-
            <b>`Ok`</b><br><br>
            Movement deleted successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
  /movements:
    get:
      tags:
        - Movement
      summary: Get list of movements
      description: >+
        ### Details:
        Retrieve the list of all movements.<br>
      operationId: GetMovements
      responses:
        "200":
          description: Movements retrieved successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetMovementsResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    post:
      tags:
        - Movement
      summary: Save a movement
      description: Save movement data
      operationId: PostMovement
      requestBody:
        description: Movement to save
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostMovementRequest'
      responses:
        "200":
          description: |-
            <b>`Created`</b><br><br>
            Movement saved successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    put:
      tags:
        - Movement
      summary: Modify all movement data
      description: Modify all data of a movement
      operationId: PutMovement
      requestBody:
        description: Movement to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutMovementRequest'
      responses:
        "200":
          description: |-
            <b>`Ok`</b><br><br>
            Movement modified successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
    patch:
      tags:
        - Movement
      summary: Modify one or more movement data
      description: Modify one or more data of a movement
      operationId: PatchMovement
      requestBody:
        description: Movement data to modify
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchMovementRequest'
      responses:
        "200":
          description: |-
            <b>`Ok`</b><br><br>
            Movement data modified successfully
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
  /reports/{customerId}:
    get:
      tags:
        - Report
      summary: Get accounts report by customer id
      description: |
        ### Detail:
        Get a report of accounts and movements made by the customer
         | Expected Result  | Path Parameter | Query Parameter                 |
        | ---------------- | ------------   | -----------------------------------|
        | Retrieve account report by customer id| customerId | - |
      operationId: getAccountsReportByCustomer
      parameters:
        - name: customerId
          in: path
          description: Customer Id
          required: true
          schema:
            type: integer
            format: int64
            example: 1234423
        - name: startDate
          in: query
          description: Start Date
          required: true
          schema:
            type: string
            format: date
            example: 2023-03-03
        - name: endDate
          in: query
          description: End Date
          required: true
          schema:
            type: string
            format: date
            example: 2023-05-16
      responses:
        "200":
          description: Report retrieved successfully
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetAccountsReportByCustomerResponse'
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "403":
          $ref: '#/components/responses/Forbidden'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "429":
          $ref: '#/components/responses/TooManyRequests'
        "500":
          $ref: '#/components/responses/InternalServerError'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
components:
  schemas:
    customerId:
      type: integer
      format: int64
      example: 123456789
    identification:
      type: string
      example: "0106279842"
      maxLength: 13
      minLength: 10
      pattern: "^[0-9]+$"
    name:
      type: string
      example: "Juan Perez"
      maxLength: 50
      minLength: 1
      pattern: "^[a-zA-Z\\sñÑÁáÉéÍíÓóÚú]+$"
    gender:
      enum:
        - Masculino
        - Femenino
      example: "Masculino"
    age:
      type: integer
      format: int32
      minimum: 0
      maximum: 100
      example: 20
    address:
      type: string
      example: "Av. Americas"
      pattern: "^[a-zA-Z0-9\\sñÑÁáÉéÍíÓóÚú.,\"&():_/-]+$"
      maxLength: 100
      minLength: 1
    phone:
      type: string
      example: "5553345564"
      maxLength: 10
      minLength: 1
      pattern: "^[0-9]+$"
    status:
      type: boolean
      example: True
    accountId:
      type: integer
      format: int64
      example: 123456789
    number:
      type: string
      example: "001234667"
      maxLength: 15
      minLength: 1
      pattern: "^[a-zA-Z0-9]+$"
      description: Identify the account number.
    accountType:
      type: string
      example: SAVINGS
      enum:
        - SAVINGS
        - CURRENT
    initialBalance:
      type: number
      format: double
      example: 10.10
      minimum: 0.00
    movementId:
      type: integer
      format: int64
      example: 123456789
    date:
      type: string
      format: date
      example: 2023-03-16
    movementType:
      type: string
      example: DEBIT
      enum:
        - DEBIT
        - CREDIT
    value:
      type: number
      format: double
      example: 10.10
      minimum: 0.00
    balance:
      type: number
      format: double
      example: 10.10
      minimum: 0.00
    movementValue:
      type: string
      example: "-5.00"
    accountTypeString:
      type: string
      example: SAVINGS
    GetAccountsResponse:
      type: array
      title: GetAccountListResponse
      items:
        $ref: '#/components/schemas/GetAccountResponse'
    GetMovementsResponse:
      type: array
      title: GetMovementListResponse
      items:
        $ref: '#/components/schemas/GetMovementResponse'
    GetAccountsReportByCustomerResponse:
      type: array
      title: GetAccountReportByCustomerResponse
      items:
        $ref: '#/components/schemas/AccountReportByCustomerResponse'
    GetCustomerResponse:
      required:
        - customerId
        - identification
        - name
        - gender
        - age
        - address
        - phone
        - status
      type: object
      properties:
        customerId:
          $ref: '#/components/schemas/customerId'
        identification:
          $ref: '#/components/schemas/identification'
        name:
          $ref: '#/components/schemas/name'
        gender:
          $ref: '#/components/schemas/gender'
        age:
          $ref: '#/components/schemas/age'
        address:
          $ref: '#/components/schemas/address'
        phone:
          $ref: '#/components/schemas/phone'
        status:
          $ref: '#/components/schemas/status'
    GetAccountByIdResponse:
      $ref: '#/components/schemas/GetAccountResponse'
    GetAccountResponse:
      required:
        - accountId
        - number
        - type
        - initialBalance
        - status
        - customer
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/accountId'
        number:
          $ref: '#/components/schemas/number'
        type:
          $ref: '#/components/schemas/accountType'
        initialBalance:
          $ref: '#/components/schemas/initialBalance'
        status:
          $ref: '#/components/schemas/status'
        customer:
          $ref: '#/components/schemas/GetCustomerResponse'
    PostAccountRequest:
      required:
        - number
        - type
        - initialBalance
        - customerId
      type: object
      properties:
        number:
          $ref: '#/components/schemas/number'
        type:
          $ref: '#/components/schemas/accountType'
        initialBalance:
          $ref: '#/components/schemas/initialBalance'
        customerId:
          $ref: '#/components/schemas/customerId'
    PutAccountRequest:
      required:
        - accountId
        - number
        - type
        - initialBalance
        - status
        - customerId
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/accountId'
        number:
          $ref: '#/components/schemas/number'
        type:
          $ref: '#/components/schemas/accountType'
        initialBalance:
          $ref: '#/components/schemas/initialBalance'
        status:
          $ref: '#/components/schemas/status'
        customerId:
          $ref: '#/components/schemas/customerId'
    PatchAccountRequest:
      required:
        - accountId
      type: object
      properties:
        accountId:
          $ref: '#/components/schemas/accountId'
        number:
          $ref: '#/components/schemas/number'
        type:
          $ref: '#/components/schemas/accountType'
        initialBalance:
          $ref: '#/components/schemas/initialBalance'
        status:
          $ref: '#/components/schemas/status'
    GetMovementByIdResponse:
      $ref: '#/components/schemas/GetMovementResponse'
    GetMovementResponse:
      required:
        - movementId
        - date
        - movementType
        - value
        - balance
        - status
        - account
      type: object
      properties:
        movementId:
          $ref: '#/components/schemas/movementId'
        date:
          $ref: '#/components/schemas/date'
        type:
          $ref: '#/components/schemas/movementType'
        value:
          $ref: '#/components/schemas/value'
        balance:
          $ref: '#/components/schemas/balance'
        status:
          $ref: '#/components/schemas/status'
        account:
          $ref: '#/components/schemas/GetAccountResponse'
    PostMovementRequest:
      required:
        - date
        - movementType
        - value
        - accountId
      type: object
      properties:
        date:
          $ref: '#/components/schemas/date'
        type:
          $ref: '#/components/schemas/movementType'
        value:
          $ref: '#/components/schemas/value'
        accountId:
          $ref: '#/components/schemas/accountId'
    PutMovementRequest:
      required:
        - movementId
        - date
        - movementType
        - value
        - status
      type: object
      properties:
        movementId:
          $ref: '#/components/schemas/movementId'
        date:
          $ref: '#/components/schemas/date'
        type:
          $ref: '#/components/schemas/movementType'
        value:
          $ref: '#/components/schemas/value'
        status:
          $ref: '#/components/schemas/status'
    PatchMovementRequest:
      required:
        - movementId
      type: object
      properties:
        movementId:
          $ref: '#/components/schemas/movementId'
        date:
          $ref: '#/components/schemas/date'
        type:
          $ref: '#/components/schemas/movementType'
        value:
          $ref: '#/components/schemas/value'
        status:
          $ref: '#/components/schemas/status'
    AccountReportByCustomerResponse:
      type: object
      properties:
        date:
          $ref: '#/components/schemas/date'
        customer:
          $ref: '#/components/schemas/name'
        accountNumber:
          $ref: '#/components/schemas/number'
        type:
          $ref: '#/components/schemas/accountTypeString'
        initialBalance:
          $ref: '#/components/schemas/initialBalance'
        status:
          $ref: '#/components/schemas/status'
        movement:
          $ref: '#/components/schemas/movementValue'
        availableBalance:
          $ref: '#/components/schemas/balance'
    ErrorModel:
      type: object
      properties:
        title:
          maximum: 50
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Mensaje de error técnico.
            <br>
            <sup><i>(EN)</i></sup> Technical error message
          example: Internal Server.
        detail:
          maximum: 50
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Mensaje a presentar al cliente, o error a detalle del evento
            <br>
            <sup><i>(EN)</i></sup> Message to display to the client, or error detailing the event
          example: "Se produjo un error interno, lo estamos revisando."
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorList'
        instance:
          maximum: 50
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Código de catálogo de errores o Una referencia URI que identifique específicamente la aparición del problema.
            <br>
            <sup><i>(EN)</i></sup> Bug Catalog Code o A URI reference that specifically identifies the occurrence of the problem.
          example: "0188"
        type:
          maximum: 100
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Una referencia URI que identifica el tipo de problema.
            <br>
            <sup><i>(EN)</i></sup> A URI reference that identifies the type of problem.
          example: /v1/name/pathSuffix
        resource:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Recurso, Clase u objeto donde se genero el error.
            <br>
            <sup><i>(EN)</i></sup> Resource, Class or object where the error was generated.
          example: UMPClientes0020/ConsultaInformacionCliente01
        component:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Componente de la aplicación o transacción.
            <br>
            <sup><i>(EN)</i></sup> Application component or transaction.
          example: TX067050
        backend:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Código backend.
            <br>
            <sup><i>(EN)</i></sup> Backend code..
          example: "00045"
    ErrorList:
      properties:
        code:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Código de catálogo de errores.
            <br>
            <sup><i>(EN)</i></sup> Error catalog code.
          example: "001"
        message:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Mensaje de error técnico.
            <br>
            <sup><i>(EN)</i></sup> Technical error message..
          example: Bad Request
        businessMessage:
          type: string
          description: |-
            <sup><i>(ES)</i></sup> Mensaje de negocio.
            <br>
            <sup><i>(EN)</i></sup> Business message.
          example: The xyz field is mandatory
  responses:
    BadRequest:
      description: |-
        <b>`Bad Request`</b><br><br>
        The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    Unauthorized:
      description: |-
        <b>`Unauthorized`</b><br><br>
        The request requires user authentication.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    Forbidden:
      description: |-
        <b>`Forbidden`</b><br><br>
        The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    NotFound:
      description: |-
        <b>`Not Found`</b><br><br>
        The server has not found anything matching the Request-URI.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    Conflict:
      description: |-
        <b>`Conflict`</b><br><br>
        The request could not be completed due to a conflict with the current state of the resource.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    TooManyRequests:
      description: |-
        <b>`Too Many Requests`</b><br><br>
        Indicates that the user has sent too many requests in a given amount of time ("rate limiting").
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    InternalServerError:
      description: |-
        <b>`Internal Server Error`</b><br><br>
        The server encountered an unexpected condition which prevented it from fulfilling the request.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'
    GatewayTimeout:
      description: |-
        <b>`Gateway Timeout`</b><br><br>
        The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server.
      content:
        application/json;charset=UTF-8:
          schema:
            $ref: '#/components/schemas/ErrorModel'