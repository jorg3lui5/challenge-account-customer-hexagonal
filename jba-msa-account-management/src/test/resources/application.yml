info:
  project:
    name: jba-msa-account-management
    version: 1.0.0

spring:
  application:
    name: jba-msa-account-management
  profiles:
    active: local
  main:
    allow-bean-definition-overriding: on
    lazy-initialization: on
  web-flux:
    base-path: /v1/account-management
  jackson:
    default-property-inclusion: non_null
    date-format: yyyy-MM-dd'T'HH:mm:ssZ
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
  redis:
    database: 0
    ssl: true
#  r2dbc:
#    url: r2dbc:postgresql://ec2-3-234-204-26.compute-1.amazonaws.com:5432/d1pvtspeuckn4b?sslMode=require
#    password: ff0f67f75c39512c0aa5e2cc2df5ad90e5d791a8984bc8cbc5b912d65d64a0d4
#    username: qlrzobvooadkdf
  r2dbc:
    url: r2dbc:postgresql://dpg-cvctll3v2p9s73c9r0eg-a.oregon-postgres.render.com:5432/jorgebarretopostgres?sslMode=require
    password: qBPeomkCTjHFKUy6UKwMNSfeIyc0zBJC
    username: username
#  r2dbc:
#    url: r2dbc:postgresql://db:5432/database
#    username: username
#    password: password
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      show-sql: true

  datasource:
    initialization-mode: always
    initialize: true
    schema: classpath:/schema.sql
    continue-on-error: true

logging:
  auditor:
    mode: 'CONSOLE'
  level:
    org.apache.kafka: OFF
  transactional:
    sendLog: true
    tracer:
      exclusion:
        uri: actuator,swagger,api-docs,csrf
server:
  port: 8082

spring:
  cloud:
    function:
      definition: consumeDecryptFile;produceDecryptFile
    stream:
      default-binder: cash-management-binder
      binders:
        cash-management-binder:
          type: kafka
          environment:
            spring:
              cloud:
                stream:
                  kafka:
                    binder:
                      brokers: pkc-56d1g.eastus.azure.confluent.cloud:9092
                      configuration:
                        sasl:
                          jaas:
                            config: org.apache.kafka.common.security.plain.PlainLoginModule required username="JXNIKQ7E7OXU2DAJ" password="girmjAPbF/UghJ+PDIYWT6PYnbKytQG2ivN+GacHVINzraH4D7MvZdlrBwDRmyyR";
                          mechanism: PLAIN
                        security:
                          protocol: SASL_SSL
      bindings:
        consumeDecryptFile-in-0:
          destination: tem_tpc_sp_file-encrypt-decript-result_dev
          group: topic_input_decrypt_file_group_6
          binder: cash-management-binder
          consumer:
            maxAttempts: 1
            defaultRetryable: false
        produceDecryptFile-out-0:
          destination: tem_tpc_sp_file-encrypt-decrypt_dev
          binder: cash-management-binder

  redis:
    host: redis-develop-business-banking.redis.cache.windows.net
    port: 6380
    password: 2wT4RYc55PgqzkJGI+M3oBMc9mUbUjMgL1xDlJcZgps=
    session:
      ttl: 600
      unique: false

kafka-info:
  topic:
    input:
      scan_antivirus: scan_antivirus
    output:
      file-encrypt-decrypt: tem_tpc_sp_file-encrypt-decrypt_dev #productor
  binding:
    input:
      file-encrypt-decrypt-result: consumeDecryptFile
    output:
      file-encrypt-decrypt: produceDecryptFile

clients:
  http-client:
    api:
      client-jba-customer-management:
        base-url: http://localhost:8081/v1/customer-management